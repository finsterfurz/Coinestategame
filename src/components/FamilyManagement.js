import React, { useState } from 'react';\n\nconst FamilyManagement = ({ familyData, setFamilyData, userConnected }) => {\n  // ===================================\n  // 🎯 STATE MANAGEMENT\n  // ===================================\n  \n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [viewMode, setViewMode] = useState('grid'); // 'grid' or 'list'\n  const [sortBy, setSortBy] = useState('level'); // 'level', 'earnings', 'happiness', 'name'\n  const [filterBy, setFilterBy] = useState('all'); // 'all', 'working', 'idle', 'common', 'rare', 'legendary'\n\n  // ===================================\n  // 🎮 UTILITY FUNCTIONS\n  // ===================================\n  \n  // Filtere und sortiere Charaktere\n  const getFilteredCharacters = () => {\n    let filtered = [...familyData.characters];\n    \n    // Filter anwenden\n    switch(filterBy) {\n      case 'working':\n        filtered = filtered.filter(char => char.working);\n        break;\n      case 'idle':\n        filtered = filtered.filter(char => !char.working);\n        break;\n      case 'common':\n      case 'rare':\n      case 'legendary':\n        filtered = filtered.filter(char => char.type === filterBy);\n        break;\n      default:\n        // 'all' - keine Filterung\n        break;\n    }\n    \n    // Sortierung anwenden\n    filtered.sort((a, b) => {\n      switch(sortBy) {\n        case 'earnings':\n          return b.dailyEarnings - a.dailyEarnings;\n        case 'happiness':\n          return b.happiness - a.happiness;\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'level':\n        default:\n          return b.level - a.level;\n      }\n    });\n    \n    return filtered;\n  };\n\n  // Rarity Icon\n  const getRarityIcon = (rarity) => {\n    switch(rarity) {\n      case 'legendary': return '💎';\n      case 'rare': return '⭐';\n      case 'common': return '👤';\n      default: return '👤';\n    }\n  };\n\n  // Rarity Color\n  const getRarityColor = (rarity) => {\n    switch(rarity) {\n      case 'legendary': return '#ffd700';\n      case 'rare': return '#9d4edd';\n      case 'common': return '#6c757d';\n      default: return '#6c757d';\n    }\n  };\n\n  // Character Level Up (Simulation)\n  const levelUpCharacter = (characterId) => {\n    const updatedCharacters = familyData.characters.map(char => {\n      if (char.id === characterId) {\n        const newLevel = char.level + 1;\n        const earningsBoost = Math.floor(Math.random() * 10) + 5; // 5-15 LUNC Boost\n        \n        return {\n          ...char,\n          level: newLevel,\n          dailyEarnings: char.dailyEarnings + earningsBoost,\n          happiness: Math.min(100, char.happiness + 5) // Happiness boost\n        };\n      }\n      return char;\n    });\n    \n    setFamilyData({ ...familyData, characters: updatedCharacters });\n  };\n\n  // Toggle Character Work Status\n  const toggleWork = (characterId) => {\n    const updatedCharacters = familyData.characters.map(char => {\n      if (char.id === characterId) {\n        return {\n          ...char,\n          working: !char.working\n        };\n      }\n      return char;\n    });\n    \n    setFamilyData({ ...familyData, characters: updatedCharacters });\n  };\n\n  // Familie Stats berechnen\n  const getFamilyStats = () => {\n    const chars = familyData.characters;\n    return {\n      totalCharacters: chars.length,\n      workingCharacters: chars.filter(c => c.working).length,\n      averageLevel: chars.length > 0 ? Math.round(chars.reduce((sum, c) => sum + c.level, 0) / chars.length) : 0,\n      averageHappiness: chars.length > 0 ? Math.round(chars.reduce((sum, c) => sum + c.happiness, 0) / chars.length) : 0,\n      rarityBreakdown: {\n        legendary: chars.filter(c => c.type === 'legendary').length,\n        rare: chars.filter(c => c.type === 'rare').length,\n        common: chars.filter(c => c.type === 'common').length\n      }\n    };\n  };\n\n  const familyStats = getFamilyStats();\n  const filteredCharacters = getFilteredCharacters();\n\n  // ===================================\n  // 🎨 RENDER COMPONENT\n  // ===================================\n\n  return (\n    <div className=\"family-management\">\n      \n      {/* Familie Header */}\n      <div className=\"family-header\">\n        <h1 className=\"family-title\">👨‍👩‍👧‍👦 Deine Familie</h1>\n        <p className=\"family-subtitle\">\n          Verwalte deine NFT-Charaktere und optimiere ihre Performance im Virtual Building Empire\n        </p>\n      </div>\n\n      {/* Familie Stats Overview */}\n      <div className=\"family-stats\">\n        <div className=\"stat-card primary\">\n          <div className=\"stat-icon\">👥</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{familyStats.totalCharacters}</span>\n            <span className=\"stat-label\">Familie Mitglieder</span>\n          </div>\n        </div>\n        \n        <div className=\"stat-card success\">\n          <div className=\"stat-icon\">💼</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{familyStats.workingCharacters}</span>\n            <span className=\"stat-label\">Arbeiten gerade</span>\n          </div>\n        </div>\n        \n        <div className=\"stat-card info\">\n          <div className=\"stat-icon\">📊</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{familyStats.averageLevel}</span>\n            <span className=\"stat-label\">Durchschnitt Level</span>\n          </div>\n        </div>\n        \n        <div className=\"stat-card warning\">\n          <div className=\"stat-icon\">😊</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{familyStats.averageHappiness}%</span>\n            <span className=\"stat-label\">Durchschnitt Happiness</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Rarity Breakdown */}\n      <div className=\"rarity-breakdown\">\n        <h3>🎯 Familie Zusammensetzung</h3>\n        <div className=\"rarity-stats\">\n          <div className=\"rarity-stat legendary\">\n            <span className=\"rarity-icon\">💎</span>\n            <span className=\"rarity-count\">{familyStats.rarityBreakdown.legendary}</span>\n            <span className=\"rarity-name\">Legendary</span>\n          </div>\n          <div className=\"rarity-stat rare\">\n            <span className=\"rarity-icon\">⭐</span>\n            <span className=\"rarity-count\">{familyStats.rarityBreakdown.rare}</span>\n            <span className=\"rarity-name\">Rare</span>\n          </div>\n          <div className=\"rarity-stat common\">\n            <span className=\"rarity-icon\">👤</span>\n            <span className=\"rarity-count\">{familyStats.rarityBreakdown.common}</span>\n            <span className=\"rarity-name\">Common</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"family-controls\">\n        \n        {/* Filter & Sort */}\n        <div className=\"controls-section\">\n          <div className=\"control-group\">\n            <label>🔍 Filter:</label>\n            <select \n              value={filterBy} \n              onChange={(e) => setFilterBy(e.target.value)}\n              className=\"control-select\"\n            >\n              <option value=\"all\">Alle Charaktere</option>\n              <option value=\"working\">Arbeiten gerade</option>\n              <option value=\"idle\">Verfügbar</option>\n              <option value=\"legendary\">Legendary</option>\n              <option value=\"rare\">Rare</option>\n              <option value=\"common\">Common</option>\n            </select>\n          </div>\n          \n          <div className=\"control-group\">\n            <label>📊 Sortieren:</label>\n            <select \n              value={sortBy} \n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"control-select\"\n            >\n              <option value=\"level\">Level (hoch → niedrig)</option>\n              <option value=\"earnings\">LUNC Verdienst</option>\n              <option value=\"happiness\">Happiness</option>\n              <option value=\"name\">Name (A → Z)</option>\n            </select>\n          </div>\n        </div>\n        \n        {/* View Mode */}\n        <div className=\"view-controls\">\n          <button \n            className={`view-btn ${viewMode === 'grid' ? 'active' : ''}`}\n            onClick={() => setViewMode('grid')}\n          >\n            🔲 Grid\n          </button>\n          <button \n            className={`view-btn ${viewMode === 'list' ? 'active' : ''}`}\n            onClick={() => setViewMode('list')}\n          >\n            📋 Liste\n          </button>\n        </div>\n      </div>\n\n      {/* Characters Display */}\n      {filteredCharacters.length === 0 ? (\n        <div className=\"no-characters\">\n          <div className=\"no-characters-content\">\n            <h3>🎮 Noch keine Charaktere!</h3>\n            <p>Mint deine ersten NFT-Charaktere um deine Familie aufzubauen.</p>\n            <button className=\"mint-button\">🎯 Charaktere minten</button>\n          </div>\n        </div>\n      ) : (\n        <div className={`characters-container ${viewMode}`}>\n          {filteredCharacters.map((character) => (\n            <div \n              key={character.id}\n              className={`character-card ${character.type} ${character.working ? 'working' : 'idle'}`}\n              onClick={() => setSelectedCharacter(\n                selectedCharacter?.id === character.id ? null : character\n              )}\n            >\n              \n              {/* Character Header */}\n              <div className=\"character-header\">\n                <div className=\"character-rarity\">\n                  <span \n                    className=\"rarity-icon\"\n                    style={{ color: getRarityColor(character.type) }}\n                  >\n                    {getRarityIcon(character.type)}\n                  </span>\n                  <span className=\"rarity-label\">{character.type}</span>\n                </div>\n                \n                <div className=\"character-status\">\n                  <span className={`status-indicator ${character.working ? 'working' : 'idle'}`}>\n                    {character.working ? '💼 Arbeitet' : '🎯 Verfügbar'}\n                  </span>\n                </div>\n              </div>\n              \n              {/* Character Info */}\n              <div className=\"character-info\">\n                <h3 className=\"character-name\">{character.name}</h3>\n                <p className=\"character-job\">{character.job}</p>\n                <p className=\"character-department\">{character.department}</p>\n              </div>\n              \n              {/* Character Stats */}\n              <div className=\"character-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">📊</span>\n                  <span className=\"stat-value\">Level {character.level}</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">💰</span>\n                  <span className=\"stat-value\">{character.dailyEarnings} LUNC/Tag</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-icon\">😊</span>\n                  <span className=\"stat-value\">{character.happiness}% Happy</span>\n                </div>\n              </div>\n              \n              {/* Character Actions - nur wenn selected */}\n              {selectedCharacter?.id === character.id && (\n                <div className=\"character-actions\">\n                  <button \n                    className=\"action-btn work\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleWork(character.id);\n                    }}\n                  >\n                    {character.working ? '🛑 Pause' : '▶️ Arbeiten'}\n                  </button>\n                  \n                  <button \n                    className=\"action-btn level-up\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      levelUpCharacter(character.id);\n                    }}\n                  >\n                    ⬆️ Level Up\n                  </button>\n                  \n                  <button \n                    className=\"action-btn details\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      // Hier später Detail-Modal öffnen\n                    }}\n                  >\n                    📋 Details\n                  </button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Familie Boni Info */}\n      <div className=\"family-bonus-info\">\n        <h3>🎁 Familie Boni</h3>\n        <div className=\"bonus-tiers\">\n          <div className={`bonus-tier ${familyStats.totalCharacters >= 1 ? 'active' : ''}`}>\n            <span className=\"tier-icon\">🏠</span>\n            <div className=\"tier-info\">\n              <span className=\"tier-title\">Kleine Familie (1-3)</span>\n              <span className=\"tier-bonus\">Basis Verdienst</span>\n            </div>\n          </div>\n          \n          <div className={`bonus-tier ${familyStats.totalCharacters >= 4 ? 'active' : ''}`}>\n            <span className=\"tier-icon\">🏡</span>\n            <div className=\"tier-info\">\n              <span className=\"tier-title\">Mittlere Familie (4-7)</span>\n              <span className=\"tier-bonus\">+5% LUNC Bonus</span>\n            </div>\n          </div>\n          \n          <div className={`bonus-tier ${familyStats.totalCharacters >= 8 ? 'active' : ''}`}>\n            <span className=\"tier-icon\">🏰</span>\n            <div className=\"tier-info\">\n              <span className=\"tier-title\">Große Familie (8+)</span>\n              <span className=\"tier-bonus\">+10-20% LUNC Bonus</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Call to Action */}\n      {familyStats.totalCharacters < 8 && (\n        <div className=\"family-cta\">\n          <h3>🚀 Familie erweitern</h3>\n          <p>\n            Du hast {familyStats.totalCharacters} von 8+ Charakteren für den maximalen Familie Bonus!\n          </p>\n          <button className=\"cta-button\">\n            🎯 Weitere Charaktere minten\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FamilyManagement;"
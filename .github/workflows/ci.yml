name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # ===================================
  # 🧪 TESTING & QUALITY CHECKS
  # ===================================
  test:
    name: 🧪 Test & Quality
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 TypeScript type check
      run: npm run type-check
    
    - name: 🧹 ESLint check
      run: npm run lint
    
    - name: 💄 Prettier check
      run: npm run format:check
    
    - name: 🧪 Run tests with coverage
      run: npm run test:ci
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: 🏗️ Build application
      run: npm run build
      env:
        GENERATE_SOURCEMAP: false
    
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: build/
        retention-days: 7

  # ===================================
  # 🔗 SMART CONTRACT TESTING
  # ===================================
  contracts:
    name: 🔗 Smart Contracts
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔨 Compile contracts
      run: npm run hardhat:compile
    
    - name: 🧪 Test contracts
      run: npm run hardhat:test

  # ===================================
  # 🔒 SECURITY SCANNING
  # ===================================
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: 🛡️ Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, typescript
    
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # ===================================
  # 🚀 DEPLOYMENT (Production)
  # ===================================
  deploy:
    name: 🚀 Deploy
    needs: [test, contracts, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://virtualbuilding.game
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🏗️ Build for production
      run: npm run build
      env:
        REACT_APP_ENVIRONMENT: production
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_CHARACTER_NFT_ADDRESS: ${{ secrets.REACT_APP_CHARACTER_NFT_ADDRESS }}
        REACT_APP_LUNC_TOKEN_ADDRESS: ${{ secrets.REACT_APP_LUNC_TOKEN_ADDRESS }}
        REACT_APP_MARKETPLACE_ADDRESS: ${{ secrets.REACT_APP_MARKETPLACE_ADDRESS }}
        REACT_APP_ALCHEMY_ID: ${{ secrets.REACT_APP_ALCHEMY_ID }}
        REACT_APP_WALLETCONNECT_PROJECT_ID: ${{ secrets.REACT_APP_WALLETCONNECT_PROJECT_ID }}
        GENERATE_SOURCEMAP: false
    
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'

  # ===================================
  # 🧪 PREVIEW DEPLOYMENT (PR)
  # ===================================
  preview:
    name: 🔍 Preview Deploy
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🏗️ Build for preview
      run: npm run build
      env:
        REACT_APP_ENVIRONMENT: preview
        GENERATE_SOURCEMAP: false
    
    - name: 🔍 Deploy Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
    
    - name: 💬 Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🔍 **Preview deployment ready!**\n\n🌐 Preview URL: [View deployment](https://virtual-building-empire-preview.vercel.app)\n\n✅ Build completed successfully'
          })

  # ===================================
  # 📊 PERFORMANCE MONITORING
  # ===================================
  lighthouse:
    name: 📊 Lighthouse
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🏗️ Build application
      run: npm run build
    
    - name: 📊 Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        uploadArtifacts: true
        temporaryPublicStorage: true